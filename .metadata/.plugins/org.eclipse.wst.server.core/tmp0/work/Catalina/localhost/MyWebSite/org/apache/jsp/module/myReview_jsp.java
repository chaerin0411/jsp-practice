/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2021-12-10 14:24:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.module;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myReview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"css/index.css\" type=\"text/css\" media=\"screen\" />\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"css/form.css\" type=\"text/css\" media=\"screen\" />\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"css/reserve.css\" type=\"text/css\" media=\"screen\" />\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"css/my.css\" type=\"text/css\" media=\"screen\" />\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<!-- myReview.jsp -->\r\n");
      out.write("<body>\r\n");
      out.write("<header><!-- header 시작 -->\r\n");
      out.write("	<nav id=\"navi\"><!-- navi 시작 -->\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><a href=\"index.jsp?CONTENTPAGE=content.jsp\">\r\n");
      out.write("				<img src=\"img/home.png\"></a></li>\r\n");
      out.write("			<li>&#5171;</li>\r\n");
      out.write("			<li><a href=\"index.jsp?CONTENTPAGE=myFlight.jsp\">마이 페이지</a></li>\r\n");
      out.write("			<li>&#5171;</li>\r\n");
      out.write("			<li><a href=\"index.jsp?CONTENTPAGE=myReview.jsp\">나의 리뷰</a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</nav><!-- navi 끝 -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "left.jsp", out, false);
      out.write("\r\n");
      out.write("</header><!-- header 끝 -->\r\n");
      out.write("\r\n");
      out.write("<!-- section main 시작 -->\r\n");
      out.write("<section id=\"main\">\r\n");
      out.write("	<!-- section category 시작 -->\r\n");
      out.write("	<section id=\"category\">\r\n");
      out.write("		<h3>나의 리뷰</h3>\r\n");
      out.write("		<input class=\"selected\" type=\"button\" value=\"관광명소\" style=\"width: 375px;\">\r\n");
      out.write("		<input type=\"button\" value=\"맛집\" style=\"width: 375px;\"><br>\r\n");
      out.write("\r\n");
      out.write("		<div id=\"search\">\r\n");
      out.write("			<select><option value=\"카테고리 전체\">카테고리 전체</select>\r\n");
      out.write("			<input type=\"date\" placeholder=\"연도-월-일\"> ~\r\n");
      out.write("			<input type=\"date\" placeholder=\"연도-월-일\">\r\n");
      out.write("			<input type=\"search\" placeholder=\"검색\">\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- category_list 시작 -->\r\n");
      out.write("		<div id=\"category_list\">\r\n");
      out.write("			<div class=\"items\">\r\n");
      out.write("				<div class=\"ihead\">\r\n");
      out.write("					<h3>2021.09.27(월)</h3>\r\n");
      out.write("					<a href=\"#\">상세보기 》</a>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"idetail\">숙소 예약번호: 210927123454732891029</div>\r\n");
      out.write("				<a href=\"#\"><img src=\"img/ellisia.png\"></a>\r\n");
      out.write("				<div class=\"itemp\">\r\n");
      out.write("					<p class=\"title\">엘리시아</p>\r\n");
      out.write("					<p class=\"comment\" style=\"margin-bottom: 12px; color: gray;\">\r\n");
      out.write("						룸B 402호<br> 2021.10.08(금) ~ 2021.10.09(토), 1박<br> \r\n");
      out.write("						체크인 15:00 ~ 체크아웃 11:00\r\n");
      out.write("					</p><hr>\r\n");
      out.write("					<p class=\"title\" style=\"margin-top: 7px;\">리뷰 내용</p>\r\n");
      out.write("					<p class=\"comment\">\r\n");
      out.write("						방도 넓고 깨끗하고 직원들도 친절하고<br> \r\n");
      out.write("						사랑하는 사람들이랑 좋은 시간 보내다왔어요 ㅎㅎ\r\n");
      out.write("					</p>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"ibtn\">\r\n");
      out.write("					<input type=\"submit\" value=\"이용 정보\">\r\n");
      out.write("					<input type=\"submit\" value=\"리뷰 수정\">\r\n");
      out.write("					<input type=\"submit\" value=\"리뷰 삭제\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div><!-- category_list 끝 -->\r\n");
      out.write("	</section><!-- section category 끝 -->\r\n");
      out.write("</section><!-- section main 끝 -->\r\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

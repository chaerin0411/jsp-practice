/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2021-12-10 14:26:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.management;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import memberManagement.*;

public final class manager_005fedit_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("memberManagement");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"manager_error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      memberManagement.ManagementBook mb = null;
      synchronized (session) {
        mb = (memberManagement.ManagementBook) _jspx_page_context.getAttribute("mb", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (mb == null){
          mb = new memberManagement.ManagementBook();
          _jspx_page_context.setAttribute("mb", mb, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"../css/index.css\" type=\"text/css\" media=\"screen\" />\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"../css/manage.css\" type=\"text/css\" media=\"screen\" />\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function delcheck() {\r\n");
      out.write("		result = confirm(\"정말로 삭제하시겠습니까 ?\");\r\n");
      out.write("		if(result == true){\r\n");
      out.write("			document.form1.action.value=\"delete\";\r\n");
      out.write("			document.form1.submit();\r\n");
      out.write("		} else return;\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- manager_edit_form.jsp -->\r\n");
      out.write("<body><br><br>\r\n");
      out.write("	<header><!-- header 시작 -->\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "top.jsp", out, false);
      out.write("\r\n");
      out.write("		<nav id=\"navi\"><!-- navi 시작 -->\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li><a href=\"../index.jsp?CONTENTPAGE=content.jsp\">\r\n");
      out.write("					<img src=\"../img/home.png\"></a></li>\r\n");
      out.write("				<li>&#5171;</li>\r\n");
      out.write("				<li>회원관리:수정화면</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</nav><!-- navi 끝 -->\r\n");
      out.write("	</header><!-- header 끝 -->\r\n");
      out.write("\r\n");
      out.write("	<!-- div center 시작 -->\r\n");
      out.write("	<div align=\"center\"><br><br>\r\n");
      out.write("		<h3>회원관리:수정화면</h3><hr><br><br>\r\n");
      out.write("		<h2><a href=manager_control.jsp?action=list>[회원관리 목록으로]</a></h2>\r\n");
      out.write("		\r\n");
      out.write("		<form name=form1 method=post action=manager_control.jsp>\r\n");
      out.write("			<input type=hidden name=\"member_id\" value=\"");
      out.print(mb.getMember_id());
      out.write("\">\r\n");
      out.write("			<input type=hidden name=\"member_pwd\" value=\"");
      out.print(mb.getMember_pwd());
      out.write("\">\r\n");
      out.write("			<input type=hidden name=\"action\" value=\"update\">\r\n");
      out.write("			<table border=\"1\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>이름</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"member_name\"\r\n");
      out.write("						value=\"");
      out.print(mb.getMember_name());
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>생년월일</th>\r\n");
      out.write("					<td><input type=\"date\" name=\"member_birth\"\r\n");
      out.write("						value=\"");
      out.print(mb.getMember_birth());
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>전화번호</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"member_tel\"\r\n");
      out.write("						value=\"");
      out.print(mb.getMember_tel());
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>이메일</th>\r\n");
      out.write("					<td><input type=\"email\" name=\"member_email\"\r\n");
      out.write("						value=\"");
      out.print(mb.getMember_email());
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>주소</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"member_addr\"\r\n");
      out.write("						value=\"");
      out.print(mb.getMember_addr());
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=2 align=center>\r\n");
      out.write("						<input type=submit value=\"저장\">\r\n");
      out.write("						<input type=reset value=\"취소\">\r\n");
      out.write("						<input type=\"button\" value=\"삭제\" onClick=\"delcheck()\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("		<footer>");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../module/bottom.jsp", out, false);
      out.write("</footer>\r\n");
      out.write("	</div><!-- div center 끝 -->\r\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

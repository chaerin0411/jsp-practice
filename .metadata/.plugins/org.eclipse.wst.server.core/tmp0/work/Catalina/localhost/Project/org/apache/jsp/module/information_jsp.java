/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2021-12-02 15:33:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.module;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class information_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- information.jsp -->\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>항공권 예약 사이트 - 여행지 정보</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/information.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("<!-- header 시작 -->\r\n");
      out.write("	<nav id=\"navi\">\r\n");
      out.write("	<!-- navi 시작 -->\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><a href=\"index.jsp?CONTENTPAGE=content.jsp\">\r\n");
      out.write("				<img src=\"img/home.png\"></a></li>\r\n");
      out.write("			<li>&#5171;</li>\r\n");
      out.write("			<li><a href=\"index.jsp?CONTENTPAGE=information.jsp\">여행지 정보</a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</nav><!-- navi 끝 -->\r\n");
      out.write("</header><!-- header 끝 -->\r\n");
      out.write("\r\n");
      out.write("<section id=\"main\">\r\n");
      out.write("<!-- section main 시작 -->\r\n");
      out.write("	<section id=\"category1\">\r\n");
      out.write("	<!-- section category1 시작 -->\r\n");
      out.write("			<h3>국내여행</h3>\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li>가평 양평</li>\r\n");
      out.write("				<li>강릉 속초</li>\r\n");
      out.write("				<li>경주</li>\r\n");
      out.write("				<li class=\"selected\">부산</li>\r\n");
      out.write("				<li>여수</li>\r\n");
      out.write("				<li>인천</li>\r\n");
      out.write("				<li>전주</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("			<input type=\"text\" value=\"국내\">\r\n");
      out.write("			<input type=\"text\">\r\n");
      out.write("	</section> <!-- section category1 끝 -->\r\n");
      out.write("		\r\n");
      out.write("	<section id=\"category2\">\r\n");
      out.write("	<!-- section category2 시작 -->\r\n");
      out.write("		<div id=\"category2_title\">\r\n");
      out.write("			<h3>관광명소</h3>\r\n");
      out.write("			<h4>요새 부산에서 핫한 관광지는?</h4>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"category2_travel\">\r\n");
      out.write("		<!-- category2_travel 시작 -->           \r\n");
      out.write("			<div class=\"items\">\r\n");
      out.write("				<a href=\"#\"><img src=\"img/bridge.JPG\"></a>\r\n");
      out.write("				<div class=\"itemp\">\r\n");
      out.write("				<p class=\"title\">광안대교</p>\r\n");
      out.write("				<p class=\"comment\">관광명소 부산 수영구<br>교량, 다리</p>\r\n");
      out.write("				<p class=\"price\">평점 4.5(252)</p>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>                    \r\n");
      out.write("			<div class=\"items\">\r\n");
      out.write("				<a href=\"#\"><img src=\"img/thebay.jpg\"></a>\r\n");
      out.write("				<div class=\"itemp\">\r\n");
      out.write("				<p class=\"title\">더베이101</p>\r\n");
      out.write("				<p class=\"comment\">관광명소 부산 해운대구<br>문화시설</p>\r\n");
      out.write("				<p class=\"price\">평점 4.8(124)</p>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>                                       \r\n");
      out.write("			<div class=\"items\">\r\n");
      out.write("				<a href=\"#\"><img src=\"img/sujung.jpg\"></a>\r\n");
      out.write("				<div class=\"itemp\">\r\n");
      out.write("				<p class=\"title\">수정동</p>\r\n");
      out.write("				<p class=\"comment\">관광명소 부산 동구<br>마을</p>\r\n");
      out.write("				<p class=\"price\">평점 4.1(156)</p>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>                  \r\n");
      out.write("		</div> <!-- category2_travel 끝 -->\r\n");
      out.write("	</section> <!-- section category2 끝 -->\r\n");
      out.write("	\r\n");
      out.write("	<section id=\"category2\">\r\n");
      out.write("	<!-- section category2 시작 -->\r\n");
      out.write("		<div id=\"category2_title\">\r\n");
      out.write("			<h3>맛집</h3>\r\n");
      out.write("			<h4>요새 부산에서 핫한 맛집은?</h4>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"category2_travel\">\r\n");
      out.write("		<!-- category2_travel 시작 -->           \r\n");
      out.write("			<div class=\"items\">\r\n");
      out.write("				<a href=\"#\"><img src=\"img/gukbab.png\"></a>\r\n");
      out.write("				<div class=\"itemp\">\r\n");
      out.write("				<p class=\"title\">수변최고돼지국밥</p>\r\n");
      out.write("				<p class=\"comment\">맛집 부산 수영구<br>국밥</p>\r\n");
      out.write("				<p class=\"price\">평점 4.2(115)</p>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>                    \r\n");
      out.write("			<div class=\"items\">\r\n");
      out.write("				<a href=\"#\"><img src=\"img/magnate.png\"></a>\r\n");
      out.write("				<div class=\"itemp\">\r\n");
      out.write("				<p class=\"title\">메그네이트</p>\r\n");
      out.write("				<p class=\"comment\">맛집 부산 남구<br>카페</p>\r\n");
      out.write("				<p class=\"price\">평점 3.9(227)</p>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>                                       \r\n");
      out.write("			<div class=\"items\">\r\n");
      out.write("				<a href=\"#\"><img src=\"img/sujung.jpg\"></a>\r\n");
      out.write("				<div class=\"itemp\">\r\n");
      out.write("				<p class=\"title\">이재모피자</p>\r\n");
      out.write("				<p class=\"comment\">맛집 부산 중구<br>피자</p>\r\n");
      out.write("				<p class=\"price\">평점 4.5(571)</p>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>                 \r\n");
      out.write("		</div> <!-- category2_travel 끝 -->\r\n");
      out.write("	</section> <!-- section category2 끝 -->\r\n");
      out.write("</section> <!-- section main 끝 -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
